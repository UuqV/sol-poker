var WebSocket = require('ws');
const { GameState } = require('../GameState');

const connection = (server) => {
    const ws = new WebSocket.Server({ server });
    const connectedClients = new Set([]);
    const roundStarted = false;

    ws.on('connection', (webSocketClient) => {
        //when a message is received
        webSocketClient.on('message', (message) => {

            const sendToAll = (message) => {
                ws
                .clients
                .forEach( client => {
                    //send the client the current message
                    client.send(JSON.stringify(message));
                });
                
            }
            console.log('message', JSON.parse(message));
            const {action, wallet} = JSON.parse(message);

            
            console.log('action', action);

            if (action == "CONNECTION") {
                connectedClients.add(`${wallet}`);
                // The spread operator here makes the set into an array for serialization
                sendToAll({action: "CONNECTION", payload: [...connectedClients]});
            } else if (action == "DEAL") {
                const cards = GameState.commonCards.length == 0 ? GameState.deal(3) : GameState.deal(1);
                sendToAll({action: "DEAL", payload: cards});
            } else if (action == "HAND") {
                const hand = GameState.dealHand();
                sendToAll({action: "HAND", payload: hand});
            }
            
        });

    });
}

module.exports = { connection };